# from flask import Flask, request
# import requests

# app = Flask(__name__)

# TELEGRAM_BOT_TOKEN = '7637391486:AAEYarDrhPKUkWzsoteS3yiVgB5QeiZdKoI'
# CHAT_ID = '-4708928215'

# # Route ch√≠nh "/" ƒë·ªÉ x·ª≠ l√Ω y√™u c·∫ßu t·ª´ UptimeRobot
# @app.route('/')
# def index():
#     return "App is running!", 200  # Tr·∫£ v·ªÅ th√¥ng b√°o x√°c nh·∫≠n app ho·∫°t ƒë·ªông

# # Route "/webhook" ƒë·ªÉ x·ª≠ l√Ω y√™u c·∫ßu t·ª´ TradingView ho·∫∑c c√°c ngu·ªìn kh√°c
# @app.route('/webhook', methods=['POST', 'GET', 'HEAD'])
# def webhook():
#     # X·ª≠ l√Ω y√™u c·∫ßu POST (d√†nh cho webhook t·ª´ TradingView)
#     if request.method == 'POST':
#         try:
#             if request.is_json:
#                 data = request.get_json(force=True)
#             else:
#                 data = {"message": request.data.decode('utf-8')}  # Gi·∫£i m√£ text raw
#             print("Received data:", data)
#             message = data.get('message', 'No message received')
#         except Exception as e:
#             print("Error parsing JSON:", str(e))
#             return "Invalid JSON", 400

#         send_message_to_telegram(message)
#         return "Webhook received", 200

#     # X·ª≠ l√Ω y√™u c·∫ßu GET v√† HEAD (d√†nh cho UptimeRobot)
#     return "Webhook is running!", 200

# # H√†m g·ª≠i tin nh·∫Øn ƒë·∫øn Telegram
# def send_message_to_telegram(message):
#     url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
#     payload = {
#         'chat_id': CHAT_ID,
#         'text': message
#     }
#     response = requests.post(url, json=payload)
#     if response.status_code == 200:
#         print("Message sent successfully!")
#     else:
#         print(f"Failed to send message: {response.text}")

# if __name__ == '__main__':
#     app.run(port=5000)


# from flask import Flask, request
# import requests
# import threading
# import time

# app = Flask(__name__)

# # Token bot ch√≠nh v√† bot ph·ª•
# MAIN_BOT_TOKEN = '7637391486:AAEYarDrhPKUkWzsoteS3yiVgB5QeiZdKoI'
# SECONDARY_BOT_TOKEN = '7466054301:AAGexBfB5pNbwmnHP1ocC9jICxR__GSNgOA'
# CHAT_ID = '-4708928215'

from flask import Flask, request
import requests
import threading
import time

app = Flask(__name__)

TELEGRAM_BOT_TOKEN = "7637391486:AAEYarDrhPKUkWzsoteS3yiVgB5QeiZdKoI"
CHAT_ID = "-4708928215"

# Danh s√°ch l∆∞u tr·ªØ c√°c t√≠n hi·ªáu ƒë·∫øn trong kho·∫£ng th·ªùi gian ng·∫Øn
signal_buffer = []
lock = threading.Lock()

def send_telegram_message():
    global signal_buffer
    while True:
        time.sleep(5)  # G·ª≠i tin nh·∫Øn m·ªói 5 gi√¢y n·∫øu c√≥ t√≠n hi·ªáu m·ªõi

        with lock:
            if signal_buffer:
                # G·ªôp t·∫•t c·∫£ c√°c t√≠n hi·ªáu th√†nh m·ªôt tin nh·∫Øn duy nh·∫•t
                symbols = " - ".join(signal_buffer)
                message = f"üö® LONG üö®: {symbols}"
                url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
                requests.post(url, json={"chat_id": CHAT_ID, "text": message})

                # X√≥a buffer sau khi g·ª≠i
                signal_buffer = []

# Route ki·ªÉm tra bot ho·∫°t ƒë·ªông
@app.route("/")
def index():
    return "App is running!", 200

# Route nh·∫≠n t√≠n hi·ªáu t·ª´ TradingView
@app.route("/webhook", methods=["POST"])
def webhook():
    global signal_buffer
    try:
        data = request.json
        symbol = data.get("symbol", "").upper()
        
        if symbol:
            with lock:
                if symbol not in signal_buffer:  # Tr√°nh tr√πng l·∫∑p
                    signal_buffer.append(f"üåú{symbol}üåõ")

        return "Webhook received", 200
    except Exception as e:
        return f"Error: {str(e)}", 400

# Ch·∫°y lu·ªìng ri√™ng ƒë·ªÉ g·ª≠i tin nh·∫Øn Telegram ƒë·ªãnh k·ª≥
threading.Thread(target=send_telegram_message, daemon=True).start()

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)

